name: Deploy with Humanitec

on:
  push:
    branches: [ main ]

env:
  IMAGE: petclinic
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}

  SCORE_HUMANITEC_VERSION: '0.10.0'
  HUMCTL_VERSION: '0.13.4'
  APP_NAME: petclinic


jobs:
  build: # Build jar file
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package -Dmaven.test.skip=true
      - uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: target/spring-petclinic-3.2.0-SNAPSHOT.jar

  deploy:
    name: Build & Notify Humanitec
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: jar-file
      - name: Set Tag with SHA
        run: echo "TAG=`echo $GITHUB_SHA | cut -c 1-7`" >> $GITHUB_ENV

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: login to aws ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: "set CONTAINER_REGISTRY env var"
        run: |
          echo "CONTAINER_REGISTRY=$REGISTRY" >> "$GITHUB_ENV"
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}


      - run: docker build --platform linux/amd64 . -t $CONTAINER_REGISTRY/$IMAGE:$TAG
      - run: docker push $CONTAINER_REGISTRY/$IMAGE:$TAG

      - uses: humanitec/setup-cli-action@v1
        with:
          version: ${{ env.HUMCTL_VERSION }}

      - name: Inform Humanitec
        run: |-
          humctl create artefact-version \
            --token ${{ secrets.HUMANITEC_TOKEN }} \
            --org ${{ vars.HUMANITEC_ORG_ID }} \
            -t container \
            -n $CONTAINER_REGISTRY/$IMAGE \
            --version $TAG \
            --ref $GITHUB_REF \
            --commit $GITHUB_SHA

      - uses: score-spec/setup-score@v2
        with:
          file: score-humanitec
          version: ${{ env.SCORE_HUMANITEC_VERSION }}

      - name: Deploy using Score
        run: |
          score-humanitec delta \
            --retry \
            --deploy \
            --token ${{ secrets.HUMANITEC_TOKEN }} \
            --org ${{ vars.HUMANITEC_ORG_ID }} \
            --app ${{ env.APP_NAME }} \
            --env development \
            -f score.yaml \
            --extensions humanitec.score.yaml \
            --workload-source-url "https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/score.yaml" \
            --image $CONTAINER_REGISTRY/$IMAGE:$TAG \
            --message "${{ github.event.head_commit.message }}"

